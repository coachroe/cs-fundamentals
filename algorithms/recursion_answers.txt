1) Define and compare recursion and iteration.
  A: Recursion - a function that calls itself until it reaches it's base case
  Iteration - using a loop to repeat a process

  Essentially, recursion chunks down the problem into smaller instances of the same problem vs. iterating over a collection with method

-----

2) Name five algorithms that are commonly implemented by recursion.
  A: Factorial
    Fibonacci
    Towers of Hanoi
    Binary search
    Greatest common divisor

-----

3) When should you use recursion, and when should you avoid recursion? Give examples for each.
  A: Use recursion - when using a combination of sub results (i.e. factorial)
  Avoid recursion - when passing over a collection and doing the same thing (i.e. finding the maximum)

-----

4) Compare the recursive and iterative solutions to the three algorithms from the checkpoint (factorial, maximum, and fibonacci). What is similar, and what is different?
  A: factorial
    similar: Very similar overall
    different: iterative takes 2 more lines of code to operate

  maximum
    similar: both get to end result, that's about it
    different: iterative is cleaner and likely faster since just iterating over a collection

  fibonacci
    similar: both get to end result, that's about it
    different: base cases are different, recursive is cleaner code, iterative looks faster given code

-----

5) Given a multi-dimensional collection (such as an array) where the number of dimensions is unknown, write a recursive algorithm to count the number of items in the entire collection.

function countItems(arr){
  if(arr.length) {
    return 1 + countItems(arr.slice(1))
  } else {
    return 0;
  }
}

-----

6) A palindrome is a word or phrase whose spelling is the same either direction (e.g., racecar). Write a recursive algorithm to determine if a given word or phrase is a palindrome.

var isPalindrome = function(string) {
    if (string.length === 0 || string.length === 1) {
        return true;
    }
    if (string[0] === string[string.length - 1]) {
        return isPalindrome(string.slice(1, string.length - 1));
    }

    return false;
};

alert(isPalindrome('racecar'));
-----

7) Google Easter Egg: Google the term "recursion". Google will prompt you with "Did you mean: recursion". Explain why this behavior exhibits properties of recursion.
  A: It's poking fun at recursion a bit in that it is giving you the same results over and over, sending you on a "recursive" loop
